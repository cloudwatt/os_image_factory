---
#
##
### Written by the CAT (Cloudwatt Automation Team)
##
#
- hosts: local
  user: cloud
  become : yes

  tasks:

    - name: add repo JQ
      lineinfile:
        dest=/etc/apt/sources.list
        line="deb http://cz.archive.ubuntu.com/ubuntu trusty main universe"

    - name: apt-get update & upgrade
      apt:
        upgrade=full
        update_cache=yes

    - name: default sh is bash
      file:
        src=/bin/bash
        dest=/bin/sh
        state=link

    - name: apt packages installed
      apt: pkg="{{ item }}" state=present
      with_items:
        - jq
        - sshfs
        - unzip
        - gnupg2
        - duplicity
        - libssl-dev
        - python-dev
        - libffi-dev
        - python-cffi
        - libguestfs-tools
        - python-setuptools
        - build-essential

    - name: apt package pip is absent
      apt: pkg=python-pip state=absent purge=yes

    - name: system upgrade
      apt: update_cache=yes upgrade=full

    - name: pip is installed
      easy_install: name=pip

    - name: pip packages are installed
      pip: name="{{ item }}" state=latest
      with_items:
        - pyopenssl
        - ndg-httpsclient
        - pyasn1
        - pip
      register: result
      until: result|success
      retries: 3
      delay: 2

    - name: /etc/duplicity exists
      file:
        path=/etc/duplicity
        state=directory
        owner=root
        group=root
        mode=0700

    - name: duplicity scripts uploaded
      copy:
        src="files/{{ item.local }}"
        dest="/etc/duplicity/{{ item.remote }}"
        owner=root
        group=root
        mode=0700
      with_items:
        - { local: dup_from_swift.sh, remote: from_swift.sh     }
        - { local: dup_to_swift.sh,   remote: to_swift.sh       }
        - { local: dup_configure.sh,  remote: configure.sh       }
        - { local: key_encrypt.batch, remote: key_encrypt.batch }
        - { local: key_sign.batch,    remote: key_sign.batch    }
        - { local: set_os_cred.sh,    remote: set_os_cred.sh    }
        - { local: volume_mnt.sh,     remote: volume_mnt.sh     }

    - name: /root/.ssh exists
      file:
        path=/root/.ssh
        state=directory
        owner=root
        group=root
        mode=0700

    - name: /root/.ssh/config is set
      lineinfile:
        create=yes
        dest=/root/.ssh/config
        line="{{ item }}"
      with_items:
        - "StrictHostKeyChecking no"
        #- "UserKnownHostsFile /dev/null"




