#!/bin/bash

CRON_FILE="/etc/cron.d/dup_backup"
CRON_SCRIPT_DIR="/etc/duplicity/cron_scripts"
BACKUP_SCRIPT="/etc/duplicity/to_swift.sh"
SETTINGS_JSON_PATH=$1

if [ ! "$SETTINGS_JSON_PATH" ]; then
    echo "SETTINGS_JSON_PATH is mandatory."
    echo -e """\
\e[32mUSAGE:\e[0m ./dup_configure.sh SETTINGS_JSON_PATH

Configures Duplicity cron jobs for automated backup.
"""
    exit 1
fi

if [ ! -r "$SETTINGS_JSON_PATH" ]; then
  echo "ERROR: Settings JSON file passed as parameter does not exist or cannot be read.";
  exit 1;
fi

SETTINGS_JSON=`cat $SETTINGS_JSON_PATH`
echo "@== JSON Start ==@"
jq "." <<< "$SETTINGS_JSON"
if [ "$?" != "0" ]; then
  echo "Error reading JSON input."
  exit 1
fi
echo "@==  JSON End  ==@"

rm -Rf   "$CRON_SCRIPT_DIR"
mkdir -p "$CRON_SCRIPT_DIR"

echo "Rewriting crontab file $CRON_FILE"
echo """\
# Crontab for server backup jobs
# Generated by Backup Bundle scripts
# Written by the CAT (Cloudwatt Automation Team)
""" > "$CRON_FILE"

TIMESLOTS=`jq -r ". | keys | .[]" <<< "$SETTINGS_JSON"`

IFS=$'\n'
for TIMESLOT in $TIMESLOTS ; do
  echo -e "\e[32m - Preparing cron for timeslot \"${TIMESLOT}\"\e[0m"

  CRON_SCRIPT=`echo "$TIMESLOT" | tr " /*" "_ls"`
  CRON_SCRIPT="${CRON_SCRIPT_DIR}/${CRON_SCRIPT}.sh"
  echo -e "\e[32m   + Writing command to crontab file:\e[0m"
  echo "$TIMESLOT root '$CRON_SCRIPT'"
  echo "$TIMESLOT root '$CRON_SCRIPT'" >> "$CRON_FILE"

  echo -e "\e[32m   + Writing cron executable:\e[0m"
  echo "#!/bin/bash"                                     > "$CRON_SCRIPT"
  echo "# Cron executable for timeslot \"${TIMESLOT}\"" >> "$CRON_SCRIPT"
  TIMESLOT_JSON=`jq ".[\"${TIMESLOT}\"]" <<< "$SETTINGS_JSON"`
  JSON_COUNT=`   jq ". | length"         <<< "$TIMESLOT_JSON"`
  for DUP_INDEX in `seq -f "%02g" 0 "$JSON_COUNT" | head -n "$JSON_COUNT"`; do
    INPUT_JSON=$(jq -c ".[$DUP_INDEX]" <<< "$TIMESLOT_JSON" \
                | sed -e 's/\"/\\\"/g'                      \
                | sed -e 's/\\\\\"/\\\\\\"/g'               \
                | sed -e 's/\$/\\\$/g')
    echo "sudo bash $BACKUP_SCRIPT \"$INPUT_JSON\""     >> "$CRON_SCRIPT"
  done
  cat "$CRON_SCRIPT"
  echo -e "\e[32m   + Adding execute permissions to cron executable.\e[0m"
  chmod 755 "$CRON_SCRIPT"
done
unset IFS
