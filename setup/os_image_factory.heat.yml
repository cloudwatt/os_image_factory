#
##
### Written by the CAT (Cloudwatt Automation Team)
##
#
heat_template_version: 2013-05-23

description: Openstack Image Factory

parameters:
  openstack_username:
    description: OS_Username for OpenStack
    type: string

  openstack_password:
    description: OS_Password for OpenStack
    type: string
    hidden: true

  tenant_name:
    description: OS_TENANT_NAME for OpenStack
    type: string

  keypair_name:
    description: Keypair to inject in instances
    type: string

  flavor_name:
    default: n1.cw.highcpu-2
    label: Instance Type (Flavor)
    description: Flavor to use for the deployed instance
    type: string
    constraints:
      - allowed_values:
        - n1.cw.highcpu-2
        - n1.cw.highcpu-4
        - n1.cw.highcpu-8
        - n1.cw.standard-1
        - n1.cw.standard-2
        - n1.cw.standard-4
        - n1.cw.standard-8
        - n1.cw.standard-12
        - n1.cw.standard-16
        - n1.cw.highmem-2
        - n1.cw.highmem-4
        - n1.cw.highmem-8
        - n1.cw.highmem-12


resources:
  dmz:
    type: OS::Neutron::Net

  dmz_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: dmz }
      ip_version: 4
      cidr: 10.42.42.0/24
      allocation_pools:
        - { start: 10.42.42.100, end: 10.42.42.199 }

  router:
    type: OS::Neutron::Router
    properties:
      admin_state_up: true
      external_gateway_info:
        enable_snat: true
        network: "public"

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource : router }
      subnet_id: { get_resource : dmz_subnet }

  sg:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - { direction: ingress, protocol: TCP, port_range_min: 22, port_range_max: 22 }
        - { direction: egress, protocol: ICMP }
        - { direction: egress, protocol: TCP }
        - { direction: egress, protocol: UDP }

  ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: 6ea98324-0f14-49f6-97c0-885d1b8dc517


  server:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: keypair_name }
      image: CentOS 7.3
      flavor: { get_param: flavor_name }
      networks:
        - { network: { get_resource: dmz } }
      security_groups:
        - { get_resource: sg }
      user_data_format: RAW
      user_data:
         str_replace:
            template: |
                      #!/bin/bash
                      echo "[local]" > ~/hosts
                      echo "127.0.0.1 ansible_connection=local" >> ~/hosts
                        cat << EOF > ~/vars.yml
                        OS_USERNAME:  $OS_USERNAME$
                        OS_TENANT_NAME: $OS_TENANT_NAME$
                        OS_PASSWORD: $OS_PASSWORD$
                        network_id: $network_id$
                        security_group_id: $security_group_id$
                      EOF
                      sudo yum install -y ansible git
                      sudo git clone https://github.com/cloudwatt/os_image_factory.git
                      sudo ansible-playbook  ./os_image_factory/setup/os_image_factory.playbook.yml -i ~/hosts -e @~/vars.yml
                      sudo rm -rf ./os_image_factory ~/hosts ~/vars.yml

            params:
                   $network_id$: { get_resource: dmz }
                   $security_group_id$: { get_resource: sg }
                   $OS_USERNAME$: {get_param: openstack_username}
                   $OS_PASSWORD$: {get_param: openstack_password}
                   $OS_TENANT_NAME$: {get_param: tenant_name}



  factory_internet_surface:
    type: OS::Nova::FloatingIPAssociation
    properties:
      floating_ip: { get_resource: ip }
      server_id: { get_resource: server }

  cinder_volume:
      type: OS::Cinder::Volume
      properties:
        size: 500
        volume_type: standard

  volume_attachment:
    type: OS::Cinder::VolumeAttachment
    properties:
      volume_id: { get_resource: cinder_volume }
      instance_uuid: { get_resource: server }
      mountpoint: /dev/vdb



outputs:
  floating_ip:
    description: IP address of the deployed compute instance
    value: { get_attr: [ip, floating_ip_address] }
