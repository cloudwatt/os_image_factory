heat_template_version: 2014-10-16
description: A simple server to run wordpress

parameters:
  key_name:
    type: string
    description: Name of an existing key pair to enable SSH access to the instance.
  flavor_name:
      default: c2.large
      label: Instance Type (Flavor)
      description: Flavor to use for the deployed instance
      type: string
      constraints:
        - allowed_values:
          - c2.large
          - c2.2xlarge
          - t2.micro
          - t2.small
          - s1.medium
          - s1.xlarge
          - m1.large
  sg_name:
    description: Name of the security group to be created
    type: string
    default: 71c89962-34a1-45e1-b985-c481a0dfa23e
  vpc_id:
    type: string
    description: vpc id
  net_id:
    type: string
    description: ID of Public Network
  subnet_id:
    type: string
    description: Private network gateway address

resources:

  elb_loadbalancer:
    type: OSE::ELB::LoadBalancer
    properties:
      name: LB_Lamp
      vpc_id: { get_param: vpc_id }
      type: External
      bandwidth: 300
      admin_state_up: true

  elb_listener:
    type: OSE::ELB::Listener
    properties:
      name: elb_listener
      loadbalancer_id: { get_resource: elb_loadbalancer }
      protocol: HTTP
      port: 80
      backend_protocol: HTTP
      backend_port: 80
      lb_algorithm: leastconn
      sticky_session_type: insert

  elb_healthcheck:
    type: OSE::ELB::HealthCheck
    properties:
      listener_id: { get_resource: elb_listener }
      healthcheck_protocol: HTTP
      healthcheck_timeout: 2
      unhealthy_threshold: 3
      healthcheck_interval: 5
      healthy_threshold: 3
      healthcheck_connect_port: 80
      healthcheck_uri: /

  elb_memberA:
    type: OSE::ELB::Member
    properties:
      listener_id: { get_resource: elb_listener }
      members:
        - server_id: { get_resource: wpa }
          address: { get_attr: [wpa, first_address] }

  elb_memberB:
    type: OSE::ELB::Member
    properties:
      listener_id: { get_resource: elb_listener }
      members:
        - server_id: { get_resource: wpb }
          address: { get_attr: [wpb, first_address] }

  wpa_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: net_id }
      fixed_ips:
        - subnet_id: { get_param: subnet_id }

  wpb_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: net_id }
      fixed_ips:
        - subnet_id: { get_param: subnet_id }
  wpa:
    type: OS::Nova::Server
    properties:
       image: Wordpress_c
       flavor: { get_param: flavor_name }
       key_name: { get_param: key_name }
       availability_zone: eu-west-0a
       networks:
         - port: { get_resource: wpa_port }
       security_groups:
        - { get_param: sg_name }

  wpb:
    type: OS::Nova::Server
    properties:
       image: Wordpress_c
       flavor: { get_param: flavor_name }
       key_name: { get_param: key_name }
       availability_zone: eu-west-0b
       networks:
         - port: { get_resource: wpb_port }
       security_groups:
        - { get_param: sg_name }


outputs:
  wpa_instance_ip:
    description: Public IP address of the newly created Nova instance.
    value: { get_attr: [wpa, first_address] }
  wpb_instance_ip:
    description: Public IP address of the newly created Nova instance.
    value: { get_attr: [wpb, first_address] }